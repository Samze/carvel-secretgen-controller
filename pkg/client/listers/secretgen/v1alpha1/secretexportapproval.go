// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/k14s/secretgen-controller/pkg/apis/secretgen/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// SecretExportApprovalLister helps list SecretExportApprovals.
type SecretExportApprovalLister interface {
	// List lists all SecretExportApprovals in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.SecretExportApproval, err error)
	// SecretExportApprovals returns an object that can list and get SecretExportApprovals.
	SecretExportApprovals(namespace string) SecretExportApprovalNamespaceLister
	SecretExportApprovalListerExpansion
}

// secretExportApprovalLister implements the SecretExportApprovalLister interface.
type secretExportApprovalLister struct {
	indexer cache.Indexer
}

// NewSecretExportApprovalLister returns a new SecretExportApprovalLister.
func NewSecretExportApprovalLister(indexer cache.Indexer) SecretExportApprovalLister {
	return &secretExportApprovalLister{indexer: indexer}
}

// List lists all SecretExportApprovals in the indexer.
func (s *secretExportApprovalLister) List(selector labels.Selector) (ret []*v1alpha1.SecretExportApproval, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.SecretExportApproval))
	})
	return ret, err
}

// SecretExportApprovals returns an object that can list and get SecretExportApprovals.
func (s *secretExportApprovalLister) SecretExportApprovals(namespace string) SecretExportApprovalNamespaceLister {
	return secretExportApprovalNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// SecretExportApprovalNamespaceLister helps list and get SecretExportApprovals.
type SecretExportApprovalNamespaceLister interface {
	// List lists all SecretExportApprovals in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.SecretExportApproval, err error)
	// Get retrieves the SecretExportApproval from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.SecretExportApproval, error)
	SecretExportApprovalNamespaceListerExpansion
}

// secretExportApprovalNamespaceLister implements the SecretExportApprovalNamespaceLister
// interface.
type secretExportApprovalNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all SecretExportApprovals in the indexer for a given namespace.
func (s secretExportApprovalNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.SecretExportApproval, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.SecretExportApproval))
	})
	return ret, err
}

// Get retrieves the SecretExportApproval from the indexer for a given namespace and name.
func (s secretExportApprovalNamespaceLister) Get(name string) (*v1alpha1.SecretExportApproval, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("secretexportapproval"), name)
	}
	return obj.(*v1alpha1.SecretExportApproval), nil
}
